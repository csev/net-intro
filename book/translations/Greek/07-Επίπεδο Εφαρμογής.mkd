Επίπεδο Εφαρμογής
=================

Εργαζόμασταν από κάτω προς τα πάνω στο μοντέλο δικτύου τεσσάρων επιπέδων TCP/IP και φτάσαμε τελικά στην κορυφή. Το επίπεδο Εφαρμογής είναι το σημείο στο οποίο λειτουργεί το δικτυακό λογισμικό, όπως προγράμματα περιήγησης ιστού, προγράμματα αλληλογραφίας, προγράμματα αναπαραγωγής βίντεο ή δικτυακά προγράμματα αναπαραγωγής βίντεο. Εμείς ως χρήστες αλληλεπιδρούμε με αυτές τις εφαρμογές και οι εφαρμογές αλληλεπιδρούν με το δίκτυο για λογαριασμό μας.

![The Application Layer](../images/layers-application)

Εικόνα 7.1: Το Επίπεδο Εφαρμογής


7.1 Εφαρμογές Πελάτη και Διακομιστή
-----------------------------------
Είναι σημαντικό να θυμόμαστε ότι απαιτούνται δύο μέρη για τη λειτουργία μιας διαδικτυακής εφαρμογής. Η αρχιτεκτονική για μια δικτυακή εφαρμογή ονομάζεται «πελάτης/διακομιστής». Το τμήμα του διακομιστή της εφαρμογής εκτελείται κάπου στο Διαδίκτυο και έχει τις πληροφορίες τις οποίες θέλουν να δουν οι χρήστες ή με τις οποίες θέλουν να αλληλεπιδράσουν. Το τμήμα πελάτη της εφαρμογής πραγματοποιεί συνδέσεις με την εφαρμογή διακομιστή, ανακτά πληροφορίες και τις εμφανίζει στον χρήστη. Αυτές οι εφαρμογές χρησιμοποιούν το επίπεδο Μεταφοράς σε κάθε έναν από τους υπολογιστές τους για την ανταλλαγή δεδομένων.

![Client/Server Applications](../sketchnote/Client_Server)

Εικόνα 7.2: Εφαρμογές Πελάτη/Διακομιστή

Για να περιηγηθείτε σε μια διεύθυνση ιστού όπως το www.khanacademy.org, πρέπει να έχετε μια εφαρμογή ιστού που να λειτουργεί στον υπολογιστή σας. Όταν πληκτρολογείτε μια διεύθυνση στο πρόγραμμα περιήγησης ιστού, συνδέεται με τον κατάλληλο διακομιστή ιστού, ανακτά τις σελίδες για προβολή και, στη συνέχεια, σας εμφανίζει τις σελίδες.

Το πρόγραμμα περιήγησης ιστού στον υπολογιστή σας στέλνει ένα αίτημα σύνδεσης στο www.khanacademy.org. Ο υπολογιστής σας αναζητά το όνομα τομέα για να βρει την αντίστοιχη διεύθυνση IP για το διακομιστή και πραγματοποιεί μια σύνδεση μεταφοράς σε αυτήν τη διεύθυνση IP, στη συνέχεια αρχίζει να ζητά δεδομένα από το διακομιστή μέσω αυτής της σύνδεσης δικτύου. Όταν τα δεδομένα λαμβάνονται, το πρόγραμμα περιήγησης ιστού τα εμφανίζει σε εσάς. Μερικές φορές τα προγράμματα περιήγησης ιστού εμφανίζουν ένα μικρό κινούμενο εικονίδιο για να σας ενημερώσουν ότι τα δεδομένα ανακτώνται από το δίκτυο.

Στο άλλο άκρο της σύνδεσης βρίσκεται μια άλλη εφαρμογή που ονομάζεται «διακομιστής ιστού». Το πρόγραμμα διακομιστή ιστού είναι πάντα ενεργό και περιμένει τις εισερχόμενες συνδέσεις. Έτσι, όταν θέλετε να δείτε μια ιστοσελίδα, συνδέεστε σε μια εφαρμογή διακομιστή που εκτελείται ήδη και περιμένει τη σύνδεσή σας.

Κατά μία έννοια, τα επίπεδα Μεταφοράς, Διαδικτύου και Διεπαφής, μαζί με το Σύστημα Ονομάτων Τομέα, είναι σαν ένα τηλεφωνικό δίκτυο για δικτυακές εφαρμογές. «Καλούν» διαφορετικές εφαρμογές διακομιστή στο δίκτυο και «συνομιλούν» με αυτές τις εφαρμογές για την ανταλλαγή δεδομένων.


7.2 Πρωτόκολλα Επιπέδου Εφαρμογής
---------------------------------
Ακριβώς όπως τα άτομα που μιλούν στο τηλέφωνο, κάθε ζεύγος εφαρμογών δικτύου ακολουθεί ένα σύνολο κανόνων που διέπουν τη συνομιλία. Στις περισσότερες κουλτούρες, όταν το τηλέφωνό σας χτυπάει και απαντάτε, λέτε «Γεια». Κανονικά, το άτομο που πραγματοποίησε την κλήση (το πρόσωπο πελάτη) σιωπά, έως ότου το άτομο που απαντά στο τηλέφωνο (το άτομο διακομιστή) να πει «Γεια». Εάν έχετε καλέσει ποτέ κάποιον που δεν ακολουθεί αυτόν τον απλό κανόνα, ξέρετε πως μπορεί να προκληθεί μπέρδεμα. Πιθανότατα θα υποθέσετε ότι η σύνδεση δεν λειτουργεί, θα κλείσετε και θα δοκιμάστε ξανά.

Ένα σύνολο κανόνων που διέπουν τον τρόπο επικοινωνίας μας ονομάζεται «πρωτόκολλο». Ο ορισμός της λέξης πρωτόκολλο είναι «ένας κανόνας που περιγράφει τον τρόπο με τον οποίο πρέπει να εκτελείται μια δραστηριότητα, ειδικά στον τομέα της διπλωματίας». Η ιδέα είναι ότι σε επίσημες καταστάσεις, πρέπει να συμπεριφερόμαστε σύμφωνα με ένα ακριβές σύνολο κανόνων. Χρησιμοποιούμε αυτήν τη λέξη για να περιγράψουμε εφαρμογές δικτύου, επειδή χωρίς ακριβείς κανόνες, οι εφαρμογές αυτές δεν γνωρίζουν πώς να δημιουργήσουν και να διαχειριστούν μια συνομιλία. Στους υπολογιστές αρέσει η ακρίβεια.

Υπάρχουν πολλές διαφορετικές δικτυακές εφαρμογές και είναι σημαντικό κάθε δικτυακή εφαρμογή να έχει ένα καλά τεκμηριωμένο πρωτόκολλο έτσι, ώστε όλοι οι διακομιστές και οι πελάτες να μπορούν να λειτουργούν. Μερικά από αυτά τα πρωτόκολλα είναι πολύπλοκα και σύνθετα.

Το πρωτόκολλο που περιγράφει τον τρόπο με τον οποίο ένα πρόγραμμα περιήγησης ιστού επικοινωνεί με έναν διακομιστή ιστού περιγράφεται σε πολλά μακροσκελή έγγραφα ξεκινώντας από αυτό:

[https://tools.ietf.org/html/rfc7230](../https://tools.ietf.org/html/rfc7230)

![Application Protocols](../sketchnote/Protocols)

Εικόνα 7.3: Πρωτόκολλα Εφαρμογής

Το επίσημο όνομα του πρωτοκόλλου μεταξύ των πελατών ιστού και των διακομιστών ιστού είναι το «Πρωτόκολλο Μεταφοράς Υπερκειμένου» (HyperText Transport Protocol) ή HTTP για συντομία. Όταν πληκτρολογείται μια διεύθυνση URL στο πρόγραμμα περιήγησης που αρχίζει με «http:» ή «https:», δηλώνετε ότι θέλετε να ανακτήσετε ένα έγγραφο χρησιμοποιώντας το πρωτόκολλο HTTP.

Εάν διαβάσετε το παραπάνω έγγραφο και μεταβείτε στην ενότητα 5.3.2 στη σελίδα 41, θα βρείτε το ακριβές κείμενο που πρέπει να αποστείλει ο πελάτης ιστού στο διακομιστή ιστού:

    GET http://www.example.org/pub/WWW/TheProject.html HTTP/1.1

Ένας από τους λόγους που το HTTP είναι τόσο επιτυχημένο είναι ότι είναι σχετικά απλό σε σύγκριση με τα περισσότερα πρωτόκολλα πελάτη/διακομιστή. Αν και η βασική χρήση του HTTP είναι σχετικά απλή, υπάρχουν πολλές λεπτομέρειες που επιτρέπουν στους πελάτες του διαδικτύου και τους διακομιστές να επικοινωνούν αποτελεσματικά και να μεταφέρουν ένα ευρύ φάσμα πληροφοριών και δεδομένων. Έξι διαφορετικά έγγραφα περιγράφουν το πρωτόκολλο HTTP, συνολικά σε 305 σελίδες. Αυτό μπορεί να μοιάζει με πολλές λεπτομέρειες, αλλά το κλειδί στο σχεδιασμό πρωτοκόλλων είναι να σκεφτούμε όλες τις πιθανές χρήσεις του πρωτοκόλλου και να περιγράψουμε προσεκτικά κάθε σενάριο.

7.3 Εξερεύνηση του Πρωτοκόλλου HTTP
-----------------------------------
Σε αυτήν την ενότητα θα χρησιμοποιήσουμε χειροκίνητα το πρωτόκολλο HTTP προσποιούμενοι ότι είστε πρόγραμμα περιήγησης ιστού και στέλνοντας εντολές HTTP σε έναν διακομιστή ιστού για ανάκτηση δεδομένων. Για να παίξουμε με το πρωτόκολλο HTTP, θα χρησιμοποιήσουμε μία από τις πρώτες εφαρμογές Διαδικτύου που κατασκευάστηκαν ποτέ.

Η εφαρμογή «telnet» αναπτύχθηκε για πρώτη φορά το 1968 και αναπτύχθηκε σύμφωνα με ένα από τα πρώτα πρότυπα για το Διαδίκτυο:

[https://tools.ietf.org/html/rfc15](../https://tools.ietf.org/html/rfc15)

Αυτό το πρότυπο έχει μόνο πέντε σελίδες και σε αυτό το σημείο, πιθανότατα μπορείτε εύκολα να διαβάσετε και να καταλάβετε το μεγαλύτερο μέρος του περιεχομένου του εγγράφου. Η εφαρμογή πελάτη telnet είναι τόσο παλιά, που είναι ουσιαστικά ένας δεινόσαυρος, καθώς προέρχεται από «προϊστορικούς» χρόνους όσον αφορά την εποχή του Διαδικτύου. Το Διαδίκτυο δημιουργήθηκε το 1985 από το πρόγραμμα NSFNet και ο πρόδρομος του NSFNet, που ονομαζόταν ARPANET, δημιουργήθηκε το 1969. Το Telnet σχεδιάστηκε και κατασκευάστηκε πριν και από την κατασκευή του πρώτου δικτύου TCP/IP.

Είναι ενδιαφέρον ότι η εφαρμογή telnet εξακολουθεί να υπάρχει στα περισσότερα λειτουργικά συστήματα. Μπορείτε να έχετε πρόσβαση στο telnet από το τερματικό (γραμμή εντολών) σε Macintosh και Linux. Η εφαρμογή telnet υπήρχε επίσης στα Windows 95 μέχρι και τα Windows XP, αλλά δεν περιλαμβάνεται σε νεότερες εκδόσεις των Windows. Εάν έχετε νεότερη έκδοση των Windows, μπορείτε να πραγματοποιήσετε λήψη και εγκατάσταση ενός προγράμματος-πελάτη telnet για να κάνετε τα παραδείγματα σε αυτήν την ενότητα.

Το Telnet είναι μια απλή εφαρμογή. Εκτελέστε το telnet από τη γραμμή εντολών (ή το τερματικό) και πληκτρολογήστε την ακόλουθη εντολή:

  telnet www.dr-chuck.com 80

Η πρώτη παράμετρος είναι ένα όνομα τομέα (και μια διεύθυνση IP θα λειτουργούσε εδώ) και μια θύρα σύνδεσης σε αυτόν τον κεντρικό υπολογιστή. Χρησιμοποιούμε τη θύρα για να υποδείξουμε σε ποιον διακομιστή εφαρμογών θα θέλαμε να συνδεθούμε. Η θύρα 80 είναι αυτή όπου συνήθως περιμένουμε να βρούμε μια εφαρμογή διακομιστή HTTP (ιστού) σε έναν κεντρικό υπολογιστή. Εάν δεν υπάρχει διακομιστής ιστού που να αφουγκράζεται στη θύρα 80, η σύνδεσή μας θα λήξει χρονικά και θα αποτύχει. Αλλά αν υπάρχει διακομιστής ιστού, θα συνδεθούμε με αυτόν τον διακομιστή ιστού και ό,τι κι αν πληκτρολογήσουμε στο πληκτρολόγιό μας θα σταλεί απευθείας στον διακομιστή. Σε αυτό το σημείο, πρέπει να γνωρίζουμε το πρωτόκολλο HTTP και να πληκτρολογούμε τις εντολές ακριβώς όπως αναμένονται. Εάν δεν γνωρίζουμε το πρωτόκολλο, ο διακομιστής ιστού δεν θα είναι πολύ φιλικός. Εδώ είναι ένα παράδειγμα όπου τα πράγματα δεν πάνε καλά:

    telnet www.dr-chuck.com 80
    Trying 198.251.66.43...
    Connected to www.dr-chuck.com.
    Escape character is '^]'.
    HELP
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html><head>
    <title>501 Method Not Implemented</title>
    ...
    </body></html>
    Connection closed by foreign host.

Πληκτρολογούμε «telnet» στο τερματικό ζητώντας σύνδεση με τη θύρα 80 (στο διακομιστή ιστού) στον υπολογιστή που φιλοξενεί την www.dr-chuck.com. Μπορείτε να παρακολουθήσετε το επίπεδο μεταφοράς μας καθώς αναζητά το όνομα τομέα, διαπιστώνοντας ότι η πραγματική διεύθυνση είναι «198.251.66.43» και, στη συνέχεια, πραγματοποιεί μια επιτυχημένη σύνδεση με αυτόν τον διακομιστή. Μόλις συνδεθούμε, ο διακομιστής περιμένει να πληκτρολογήσουμε μια εντολή ακολουθούμενη από το πλήκτρο enter ή return. Επειδή δεν γνωρίζουμε το πρωτόκολλο, πληκτρολογούμε «HELP» και enter. Ο διακομιστής δεν είναι ικανοποιημένος, μας δίνει ένα μήνυμα σφάλματος και, στη συνέχεια, κλείνει τη σύνδεση. Δεν έχουμε δεύτερη ευκαιρία. Εάν δεν γνωρίζουμε το πρωτόκολλο, ο διακομιστής ιστού δεν θέλει να μας μιλήσει.

![Hacking HTTP By Hand](../sketchnote/Hacking_HTTP)

Εικόνα 7.4: Παραβίαση HTTP Χειροκίνητα

Αλλά ας επιστρέψουμε και ας διαβάσουμε την ενότητα 5.3.2 του εγγράφου RFC-7230 και έπειτα ας προσπαθήσουμε ξανά να ζητήσουμε ένα έγγραφο χρησιμοποιώντας τη σωστή σύνταξη:

    telnet www.dr-chuck.com 80
    Trying 198.251.66.43...
    Connected to www.dr-chuck.com.
    Escape character is '^]'.
    GET http://www.dr-chuck.com/page1.htm HTTP/1.0

    HTTP/1.1 200 OK
    Last-Modified: Sun, 19 Jan 2014 14:25:43 GMT
    Content-Length: 131
    Content-Type: text/html

    <h1>The First Page</h1>
    <p>
    If you like, you can switch to the
    <a href="http://www.dr-chuck.com/page2.htm">
    Second Page</a>.
    </p>
    Connection closed by foreign host.

Κάνουμε ξανά τη σύνδεση με το πρόγραμμα περιήγησης ιστού χρησιμοποιώντας telnet και μετά στέλνουμε μια εντολή GET που υποδεικνύει ποιο έγγραφο θέλουμε να ανακτήσουμε. Χρησιμοποιούμε την έκδοση 1.0 του πρωτοκόλλου HTTP επειδή είναι απλούστερη από το HTTP 1.1. Στη συνέχεια, στέλνουμε μια κενή γραμμή πατώντας «return» ή «enter» για να δείξουμε ότι τελειώσαμε με το αίτημά μας.

Δεδομένου ότι έχουμε στείλει το κατάλληλο αίτημα, ο κεντρικός υπολογιστής αποκρίνεται με μια σειρά κεφαλίδων που περιγράφουν το έγγραφο, ακολουθούμενο από μια κενή γραμμή και στη συνέχεια στέλνει το πραγματικό έγγραφο.

Οι κεφαλίδες κοινοποιούν μεταδεδομένα (δεδομένα σχετικά με δεδομένα) σχετικά με το έγγραφο που ζητήσαμε να ανακτήσουμε. Για παράδειγμα, η πρώτη γραμμή περιέχει έναν κωδικό κατάστασης.

Σε αυτό το παράδειγμα, ο κωδικός κατάστασης «200» σημαίνει ότι τα πράγματα πήγαν καλά. Ένας κωδικός κατάστασης «404» στην πρώτη γραμμή των κεφαλίδων υποδεικνύει ότι το ζητούμενο έγγραφο δεν βρέθηκε. Ένας κωδικός κατάστασης «301» υποδηλώνει ότι το έγγραφο έχει μετακινηθεί σε μια νέα θέση.

Οι κωδικοί κατάστασης για HTTP ομαδοποιούνται σε εύρη: κωδικοί 2XX υποδεικνύουν επιτυχία, κωδικοί 3XX προορίζονται για ανακατεύθυνση, κωδικοί 4XX υποδεικνύουν ότι η εφαρμογή πελάτη έκανε κάτι λάθος και κωδικοί 5ΧΧ υποδεικνύουν ότι ο διακομιστής έκανε κάτι λάθος.

Αυτό είναι ένα έγγραφο Γλώσσα Σήμανσης Υπερκειμένου (HyperText Markup Language – HTML), οπότε επισημαίνεται με ετικέτες όπως <h1> και <p>. Όταν το πρόγραμμα περιήγησής σας λαμβάνει το έγγραφο σε μορφή HTML, εξετάζει τη σήμανση στο έγγραφο, το ερμηνεύει και σας παρουσιάζει μια μορφοποιημένη έκδοση του εγγράφου.


7.4 Το Πρωτόκολλο IMAP για Ανάκτηση Αλληλογραφίας
-------------------------------------------------
Το πρωτόκολλο HTTP είναι μόνο ένα από τα πολλά πρωτόκολλα εφαρμογής πελάτη/διακομιστή που χρησιμοποιούνται στο Διαδίκτυο. Ένα άλλο κοινό πρωτόκολλο χρησιμοποιείται έτσι ώστε μια εφαρμογή αλληλογραφίας που εκτελείται στον υπολογιστή σας να μπορεί να ανακτήσει αλληλογραφία από έναν κεντρικό διακομιστή. Επειδή ο προσωπικός σας υπολογιστής ενδέχεται να μην είναι ενεργοποιημένος ανά πάσα στιγμή, όταν αποστέλλεται αλληλογραφία σε εσάς, αποστέλλεται πρώτα σε ένα διακομιστή και αποθηκεύεται σε αυτόν μέχρι να ενεργοποιήσετε τον υπολογιστή σας και να ανακτήσετε οποιοδήποτε νέο μήνυμα ηλεκτρονικού ταχυδρομείου.

Όπως πολλά πρότυπα εφαρμογής, το Πρωτόκολλο Πρόσβασης Μηνύματος Διαδικτύου (IMAP) περιγράφεται σε μια σειρά εγγράφων Αιτήματος Για Σχόλιο (Request For Comment – RFC) που ξεκινούν με αυτό το RFC:

    https://tools.ietf.org/html/rfc3501

Το IMAP είναι ένα πιο περίπλοκο πρωτόκολλο από το πρωτόκολλο ιστού, επομένως δεν θα μπορέσουμε να χρησιμοποιήσουμε την εντολή telnet για να το εξαπατήσουμε. Αλλά εάν επρόκειτο να αναπτύξετε μια εφαρμογή ανάγνωσης αλληλογραφίας, θα μπορούσατε να διαβάσετε προσεκτικά αυτό το έγγραφο και να αναπτύξετε κώδικα για να έχετε μια επιτυχημένη συνομιλία με έναν διακομιστή συμβατό με τα πρότυπα IMAP. Εδώ είναι ένα απλό παράδειγμα από την ενότητα 6.3.1 του παραπάνω εγγράφου που δείχνει τι στέλνει ο πελάτης (C :) και πώς αποκρίνεται ο διακομιστής (S :):

  C: A142 SELECT INBOX
  S: * 172 EXISTS
  S: * 1 RECENT
  S: * OK [UNSEEN 12] Message 12 is first unseen
  S: * OK [UIDVALIDITY 3857529045] UIDs valid
  S: * OK [UIDNEXT 4392] Predicted next UID
  S: * FLAGS (\Answered \Flagged \Deleted \Seen \Draft)
  S: * OK [PERMANENTFLAGS (\Deleted \Seen \*)] Limited
  S: A142 OK [READ-WRITE] SELECT completed

Τα μηνύματα που αποστέλλονται από τον πελάτη και τον διακομιστή δεν είναι σχεδιασμένα για προβολή στον τελικό χρήστη, οπότε δεν είναι ιδιαίτερα περιγραφικά. Αυτά τα μηνύματα μορφοποιούνται με ακρίβεια και αποστέλλονται με ακριβή σειρά, ώστε να μπορούν να δημιουργούνται και να διαβάζονται από δικτυακές εφαρμογές που λειτουργούν στα άκρα της σύνδεσης.


7.5 Έλεγχος Ροής
----------------
Όταν εξετάσαμε το επίπεδο Μεταφοράς, μιλήσαμε για το «μέγεθος παραθύρου», το οποίο ήταν ο όγκος των δεδομένων που θα στείλει το επίπεδο μεταφοράς στον υπολογιστή αποστολής, πριν σταματήσει για να περιμένει μια επιβεβαίωση.

![Buffering in the Transport Layer](../images/transport-buffer)

Εικόνα 7.5: Προσωρινή Αποθήκευση στο Επίπεδο Μεταφοράς

Σε αυτό το σχήμα, βλέπουμε ένα μήνυμα χωρισμένο σε πακέτα, με μερικά από τα πακέτα να αποστέλλονται και να επιβεβαιώνονται. Έξι πακέτα έχουν αποσταλεί, αλλά δεν έχουν ακόμη επιβεβαιωθεί και το επίπεδο Μεταφοράς του αποστολέα έχει φτάσει στο όριο του παραθύρου μετάδοσης, οπότε κάνει παύση, έως ότου λάβει μια επιβεβαίωση από το επίπεδο Μεταφοράς του παραλήπτη. Ο υπολογιστής λήψης έχει λάβει τρία πακέτα, ένα από τα οποία είναι εκτός σειράς.

Όταν εξετάσαμε αυτό το παράδειγμα πριν από την άποψη του επιπέδου Μεταφοράς, αγνοήσαμε από πού προέρχονταν τα πακέτα που θα σταλούν και από πού πήγαιναν τα πακέτα στον υπολογιστή λήψης. Τώρα που εξετάζουμε το επίπεδο Εφαρμογής, μπορούμε να προσθέσουμε και τις δύο εφαρμογές που είναι η πηγή και ο προορισμός της ροής δεδομένων.

Ας υποθέσουμε ότι το πρόγραμμα περιήγησης ιστού έχει πραγματοποιήσει μια σύνδεση μεταφοράς με τον διακομιστή ιστού και έχει ξεκινήσει τη λήψη ενός αρχείου εικόνας. Ο διακομιστής ιστού έχει ανοίξει το αρχείο εικόνας και στέλνει τα δεδομένα από το αρχείο στο επίπεδο Μεταφοράς του το συντομότερο δυνατό. Ωστόσο, το επίπεδο Μεταφοράς πρέπει να ακολουθήσει τους κανόνες του μεγέθους του παραθύρου, έτσι μπορεί να στείλει μόνο ένα συγκεκριμένο ποσό δεδομένων κάθε φορά. Όταν το παράθυρο συμπληρωθεί, ο διακομιστής ιστού διακόπτεται, έως ότου το επίπεδο μεταφοράς στον υπολογιστή προορισμού αρχίσει να λαμβάνει και να επιβεβαιώνει πακέτα.

Καθώς το επίπεδο Μεταφοράς στον υπολογιστή προορισμού αρχίζει να λαμβάνει πακέτα, ανακατασκευάζει τη ροή δεδομένων και επιβεβαιώνει πακέτα, παραδίδει την ανακατασκευασμένη ροή πακέτων στην εφαρμογή του προγράμματος περιήγησης ιστού στην οθόνη του χρήστη. Μερικές φορές σε αργή σύνδεση, μπορείτε να δείτε το πρόγραμμα περιήγησής σας να «χρωματίζει» τις εικόνες καθώς προχωρά η λήψη των δεδομένων. Σε μια γρήγορη σύνδεση, τα δεδομένα έρχονται τόσο γρήγορα που οι εικόνες εμφανίζονται αμέσως.

Εάν επανασχεδιάσουμε την εικόνα των πακέτων μας στο επίπεδο Μεταφοράς, προσθέτοντας και τα δύο επίπεδα εφαρμογής όπου τα πακέτα βρίσκονται στη μέση μιας εικόνας, τώρα μοιάζει με αυτό:

 ![Buffering in the Application and Transport Layers](../images/application-transport-buffer)

 Εικόνα 7.6: Προσωρινή Αποθήκευση στα Επίπεδα Εφαρμογής και Μεταφοράς

Ο διακομιστής ιστού διαβάζει το αρχείο εικόνας («F») και το στέλνει ως ροή στο πρόγραμμα περιήγησης ιστού όσο γρήγορα μπορεί να στείλει τα δεδομένα. Το επίπεδο Μεταφοράς προέλευσης έχει σπάσει τη ροή σε πακέτα και χρησιμοποίησε IP για να στείλει τα πακέτα στον υπολογιστή προορισμού.

Το επίπεδο Μεταφοράς έχει στείλει έξι πακέτα («S») και έχει σταματήσει να στέλνει, επειδή έχει φτάσει στο μέγεθος του παραθύρου του και έχει θέσει σε παύση τον διακομιστή ιστού. Τρία από αυτά τα έξι πακέτα έχουν φτάσει στο επίπεδο Μεταφοράς στον υπολογιστή προορισμού («R») και τρία από τα πακέτα συνεχίζουν να διασχίζουν το Διαδίκτυο («S»).

Καθώς το επίπεδο Μεταφοράς προορισμού ανασυνθέτει τη ροή των πακέτων, στέλνει επίσης μια επιβεβαίωση (ACK) και παραδίδει τα δεδομένα στην εφαρμογή λήψης (το πρόγραμμα περιήγησης ιστού). Το πρόγραμμα περιήγησης ιστού ανακατασκευάζει την εικόνα («A») και την εμφανίζει στο χρήστη καθώς λαμβάνονται τα δεδομένα.

Το βασικό που πρέπει να παρατηρήσετε σε αυτήν την εικόνα είναι ότι τα επίπεδα μεταφοράς δεν διατηρούν τα πακέτα ολόκληρου του αρχείου. Διατηρούν μόνο πακέτα που είναι «υπό διαμετακόμιση» και μη επιβεβαιωμένα. Μόλις τα πακέτα επιβεβαιωθούν και παραδοθούν στην εφαρμογή προορισμού, δεν υπάρχει κανένας λόγος είτε για το επίπεδο Μεταφοράς προέλευσης είτε για το προορισμού να διατηρήσει τα πακέτα.

Όταν έρχεται η επιβεβαίωση από τον υπολογιστή προορισμού στον υπολογιστή προέλευσης, το επίπεδο Μεταφοράς στον υπολογιστή προέλευσης ακυρώνει την παύση της εφαρμογής διακομιστή ιστού και ο διακομιστής ιστού συνεχίζει να διαβάζει δεδομένα από το αρχείο και να τα στέλνει στο επίπεδο Μεταφοράς προέλευσης για μετάδοση.

Αυτή η δυνατότητα να ξεκινήσετε και να σταματήσετε την εφαρμογή αποστολής για να βεβαιωθείτε ότι στέλνουμε δεδομένα το συντομότερο δυνατό χωρίς να στέλνουμε δεδομένα τόσο γρήγορα που να φράζουν το Διαδίκτυο ονομάζεται «έλεγχος ροής» (flow control). Οι εφαρμογές δεν είναι υπεύθυνες για τον έλεγχο της ροής, απλώς προσπαθούν να στείλουν ή να λάβουν δεδομένα το συντομότερο δυνατό και τα δύο επίπεδα μεταφοράς ξεκινούν και σταματούν τις εφαρμογές ανάλογα με τις ανάγκες με βάση την ταχύτητα και την αξιοπιστία του δικτύου.


7.6 Αναπτύσσοντας Δικτυακές Εφαρμογές
-------------------------------------
Οι εφαρμογές που στέλνουν και λαμβάνουν δεδομένα μέσω του δικτύου γράφονται σε μία ή περισσότερες γλώσσες προγραμματισμού. Πολλές γλώσσες προγραμματισμού διαθέτουν βιβλιοθήκες κώδικα που καθιστούν πολύ απλή τη σύνταξη του κώδικα εφαρμογής για την αποστολή και λήψη δεδομένων μέσω του δικτύου. Με μια καλή βιβλιοθήκη προγραμματισμού, η σύνδεση σε μια εφαρμογή που εκτελείται σε διακομιστή, η αποστολή δεδομένων στο διακομιστή και η λήψη δεδομένων από το διακομιστή είναι γενικά τόσο εύκολη όσο η ανάγνωση και η γραφή ενός αρχείου.

Για παράδειγμα, ο παρακάτω κώδικας είναι το μόνο που χρειάζεστε στη γλώσσα προγραμματισμού Python για να πραγματοποιήσετε σύνδεση σε διακομιστή ιστού και να ανακτήσετε ένα έγγραφο:

![Programming with Sockets in Python](../images/python-socket)

Εικόνα 7.7: Προγραμματίζοντας με χρήση Υποδοχών στην Python

Είτε γνωρίζετε, είτε όχι, τη γλώσσα προγραμματισμού Python, το βασικό σημείο είναι ότι χρειάζονται μόνο δέκα γραμμές κώδικα για τη δημιουργία και τη χρήση μιας σύνδεσης δικτύου. Αυτός ο κώδικας είναι απλός, επειδή τα επίπεδα Μεταφοράς, Διαδικτύου και Διεπαφής επιλύουν αποτελεσματικά τα προβλήματα σε κάθε ένα από τα επίπεδά τους, ώστε οι εφαρμογές που χρησιμοποιούν το δίκτυο μπορούν να αγνοήσουν σχεδόν όλες τις λεπτομέρειες του τρόπου εφαρμογής του δικτύου.

Στην εφαρμογή Python, σε αυτήν τη γραμμή κώδικα

  mysock.connect(('www.py4inf.com', 80))

έχουμε δηλώσει ότι θα συνδεθούμε με την εφαρμογή που ακούει για εισερχόμενες συνδέσεις στη θύρα 80 στον απομακρυσμένο υπολογιστή www.py4inf.com.

Επιλέγοντας τη θύρα 80, δηλώνουμε ότι θέλουμε να συνδεθούμε με έναν διακομιστή Ιστού Παγκόσμιας Εμβέλειας (World Wide Web) σε αυτόν τον κεντρικό υπολογιστή και περιμένουμε να επικοινωνήσουμε με αυτόν τον διακομιστή χρησιμοποιώντας το Πρωτόκολλο Μεταφοράς Υπερκειμένου.


7.7 Περίληψη
------------
Ο σκοπός των τριών κατώτερων επιπέδων (Μεταφοράς, Διαδικτύου και Διεπαφής) είναι να φροντίζουν έτσι, ώστε οι εφαρμογές που εκτελούνται στο επίπεδο Εφαρμογής να μπορούν να εστιάσουν στο πρόβλημα της εφαρμογής που πρέπει να λυθεί και να αφήνουν τα κατώτερα επίπεδα του μοντέλου δικτύου να χειριστούν όλη την πολυπλοκότητα της μετακίνησης δεδομένων στο δίκτυο.

Επειδή αυτή η προσέγγιση καθιστά τόσο απλή τη δημιουργία εφαρμογών δικτύου, έχουμε δει ένα ευρύ φάσμα δικτυακών εφαρμογών, συμπεριλαμβανομένων προγραμμάτων περιήγησης ιστού, εφαρμογών αλληλογραφίας, δικτυακών βιντεοπαιχνιδιών, εφαρμογών τηλεφωνίας με βάση το δίκτυο και πολλών άλλων. Και αυτό που είναι ακόμα πιο συναρπαστικό είναι ότι είναι εύκολο να πειραματιστείτε και να δημιουργήσετε εντελώς νέους τύπους δικτυακών εφαρμογών για την επίλυση προβλημάτων που δεν έχουμε ακόμη φανταστεί.


7.8 Γλωσσάρι
------------
**HTML:** HyperText Markup Language – Γλώσσα Σήμανσης Υπερκειμένου. Μορφή κειμένου που επισημαίνει κείμενο, χρησιμοποιώντας ετικέτες που περιβάλλονται από χαρακτήρες «μικρότερο από» και «μεγαλύτερο από». Ένα παράδειγμα HTML μοιάζει με: <p> Αυτό είναι <strong> ωραίο</strong> </p>.

**HTTP:** HyperText Transport Protocol – Πρωτόκολλο Μεταφοράς Υπερκειμένου. Ένα πρωτόκολλο επιπέδου Εφαρμογής που επιτρέπει στα προγράμματα περιήγησης ιστού να ανακτούν έγγραφα ιστού από διακομιστές ιστού.

**IMAP:** Πρωτόκολλο Πρόσβασης Μηνυμάτων Διαδικτύου. Ένα πρωτόκολλο που επιτρέπει στους πελάτες αλληλογραφίας να συνδεθούν και να ανακτήσουν αλληλογραφία από διακομιστές αλληλογραφίας με δυνατότητα IMAP.

**telnet:** Μια απλή εφαρμογή πελάτη που κάνει συνδέσεις TCP σε διάφορους συνδυασμούς διευθύνσεων/θυρών και επιτρέπει την αποστολή δεδομένων που πληκτρολογούνται μέσω της σύνδεσης. Στις πρώτες μέρες του Διαδικτύου, το telnet χρησιμοποιήθηκε για απομακρυσμένη σύνδεση σε έναν υπολογιστή μέσω του δικτύου.

**διακομιστής ιστού:** Μια εφαρμογή που παρέχει (εξυπηρετεί) ιστοσελίδες

**Έλεγχος ροής – flow control:** Όταν ένας υπολογιστής αποστολής επιβραδύνεται για να βεβαιωθεί ότι δεν κατακλύζει ούτε το δίκτυο ούτε τον υπολογιστή προορισμού. Ο έλεγχος ροής προκαλεί επίσης τον υπολογιστή αποστολής να αυξήσει την ταχύτητα με την οποία αποστέλλονται τα δεδομένα, όταν είναι βέβαιο ότι το δίκτυο και ο υπολογιστής προορισμού μπορούν να χειριστούν τους ταχύτερους ρυθμούς δεδομένων.

**κωδικός κατάστασης – status code:** Μια πτυχή του πρωτοκόλλου HTTP που δείχνει τη συνολική επιτυχία ή αποτυχία ενός αιτήματος για ένα έγγραφο. Ο πιο γνωστός κωδικός κατάστασης HTTP είναι το «404», με αυτόν τον τρόπο ένας διακομιστής HTTP ενημερώνει έναν πελάτη HTTP (δηλαδή ένα πρόγραμμα περιήγησης) ότι δεν ήταν δυνατή η εύρεση του ζητούμενου εγγράφου.

**πρόγραμμα περιήγησης ιστού:** Μια εφαρμογή πελάτη που εκτελείτε στον υπολογιστή σας για ανάκτηση και προβολή ιστοσελίδων.

**υποδοχή – socket:** Μια βιβλιοθήκη λογισμικού, διαθέσιμη σε πολλές γλώσσες προγραμματισμού, που καθιστά τη δημιουργία μιας σύνδεσης δικτύου και την ανταλλαγή δεδομένων σχεδόν τόσο εύκολη όσο το άνοιγμα και η ανάγνωση ενός αρχείου στον υπολογιστή σας.

7.9 Ερωτήσεις
-------------
Μπορείτε να συμμετάσχετε σε αυτό το κουίζ διαδικτυακά στη διεύθυνση http://www.net-intro.com/quiz/

1. Ποιο επίπεδο βρίσκεται ακριβώς κάτω από το επίπεδο εφαρμογής;
α) Μεταφοράς
β) Διαδικτύου
γ) Επίπεδο Διεπαφής
δ) Ασαφές Επίπεδο

2. Τι είδους έγγραφο χρησιμοποιείται για την περιγραφή ευρέως χρησιμοποιούμενων πρωτοκόλλων επιπέδου Εφαρμογής;
α) DHCP
β) RFC
γ) APPDOC
δ) ISO 9000

3. Ποια από αυτές είναι μια ιδέα που εφευρέθηκε στο επίπεδο Εφαρμογής;
a) 0f: 2a: b3: 1f: b3: 1a
β) 192.168.3.14
γ) www.khanacademy.com
δ) http://www.dr-chuck.com/

4. Ποιο από τα παρακάτω είναι κάτι για το οποίο δεν ανησυχεί το επίπεδο εφαρμογής;
α) Αν ο πελάτης ή ο διακομιστής αρχίζει να μιλάει πρώτα
β) Η μορφή των εντολών και των απαντήσεων που ανταλλάσσονται σε μια υποδοχή
γ) Πώς αλλάζει το μέγεθος του παραθύρου καθώς τα δεδομένα αποστέλλονται σε μια υποδοχή
δ) Πώς αναπαρίστανται τα δεδομένα καθώς αποστέλλονται σε όλο το δίκτυο για να διασφαλιστεί η διαλειτουργικότητα.

5. Ποιο από αυτά είναι ένα πρωτόκολλο επιπέδου Εφαρμογής;
α) HTTP
β) TCP
γ) DHCP
δ) Ethernet

6. Ποια θύρα χρησιμοποιείται συνήθως για να μιλήσουμε με έναν διακομιστή Ιστού;
α) 23
β) 80
γ) 103
δ) 143

7. Ποια είναι η εντολή που στέλνει ένα πρόγραμμα περιήγησης ιστού σε έναν διακομιστή Ιστού για να ανακτήσει ένα έγγραφο Ιστού;
α) RETR
β) DOCUMENT
γ) 404
δ) GET

8. Ποιος είναι ο σκοπός της κεφαλίδας «Content-type:» όταν ανακτάτε ένα έγγραφο μέσω του πρωτοκόλλου ιστού;
α) Λέει στο πρόγραμμα περιήγησης πώς να εμφανίσει το ανακτημένο έγγραφο
β) Λέει στο πρόγραμμα περιήγησης πού να πάει, εάν δεν μπορεί να βρεθεί το έγγραφο
γ) Ενημερώνει το πρόγραμμα περιήγησης, εάν το ανακτημένο έγγραφο είναι κενό
δ) Ενημερώνει το πρόγραμμα περιήγησης πού τελειώνουν οι κεφαλίδες και από πού ξεκινά το περιεχόμενο

9. Ποια κοινή εντολή UNIX μπορεί να χρησιμοποιηθεί για την αποστολή απλών εντολών σε διακομιστή Ιστού;
α) ftp
β) ping
γ) traceroute
δ) telnet

10. Τι σημαίνει ένας κωδικός κατάστασης HTTP  «404»;
α) Το έγγραφο έχει μετακινηθεί
β) Επιτυχής ανάκτηση εγγράφων
γ) Σφάλμα πρωτοκόλλου
δ) Το έγγραφο δεν βρέθηκε

11. Ποιοι χαρακτήρες χρησιμοποιούνται για τη σήμανση εγγράφων HTML;
α) Σύμβολα μικρότερο από και μεγαλύτερο από < >
β) Θαυμαστικά !
γ) Αγκύλες [ ]
δ) Άγκιστρα { }

12. Ποιο είναι ένα κοινό πρωτόκολλο εφαρμογής για την ανάκτηση αλληλογραφίας;
α) RFC
β) HTML
γ) ICANN
δ) IMAP

13. Ποιο πρωτόκολλο εφαρμογής περιγράφει το RFC15;
α) telnet
β) ping
γ) traceroute
δ) www

14. Τι συμβαίνει σε μια εφαρμογή διακομιστή που στέλνει ένα μεγάλο αρχείο, όταν το επίπεδο TCP έχει στείλει αρκετά δεδομένα για να συμπληρώσει το μέγεθος του παραθύρου και δεν έχει λάβει ακόμη επιβεβαίωση;
α) Η εφαρμογή αλλάζει τη μετάδοσή της σε νέα υποδοχή
β) Η εφαρμογή διακόπτεται και πρέπει να γίνει επανεκκίνηση
γ) Η εφαρμογή τίθεται σε παύση, έως ότου ο απομακρυσμένος υπολογιστής επιβεβαιώσει ότι έχει λάβει ορισμένα από τα δεδομένα
δ) Ο πλησιέστερος δρομολογητής πύλης αρχίζει να απορρίπτει πακέτα που θα ξεπερνούσαν το μέγεθος του παραθύρου

15. Τι είναι η «υποδοχή/socket» στο Διαδίκτυο;
α) Ένας τρόπος για τις συσκευές να αποκτήσουν ασύρματη ισχύ
β) Ένας τρόπος για να λάβουν οι συσκευές μια διεύθυνση IP
γ) Καταχώρηση σε πίνακα δρομολόγησης
δ) Μια αμφίδρομη σύνδεση δεδομένων μεταξύ ενός ζεύγους εφαρμογών πελάτη και διακομιστή

16. Τι πρέπει να γνωρίζει μια εφαρμογή για να κάνει μια σύνδεση με υποδοχή στο λογισμικό;
α) Τη διεύθυνση του διακομιστή και τον αριθμό θύρας στο διακομιστή
β) Τη διαδρομή μεταξύ των υπολογιστών προέλευσης και προορισμού
γ) Ποιο μέρος της διεύθυνσης IP είναι ο αριθμός δικτύου
δ) Το αρχικό μέγεθος του παραθύρου TCP κατά τη μετάδοση
